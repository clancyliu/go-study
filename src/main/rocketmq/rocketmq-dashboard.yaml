---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    k8s.kuboard.cn/displayName: rocketmq-dashboard(已验证)
    k8s.kuboard.cn/workload: rocketmq-dashboard
  labels:
    k8s.kuboard.cn/layer: web
    k8s.kuboard.cn/name: rocketmq-dashboard
  name: rocketmq-dashboard
  namespace: env
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s.kuboard.cn/layer: web
      k8s.kuboard.cn/name: rocketmq-dashboard
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: '2023-04-07T17:24:05+08:00'
      labels:
        k8s.kuboard.cn/layer: web
        k8s.kuboard.cn/name: rocketmq-dashboard
    spec:
      containers:
        - env:
            - name: JAVA_OPTS
              value: >-
                -Dlogging.level.root=info
                -Drocketmq.namesrv.addr=rocketmq-namesrv:9876
            - name: Dcom.rocketmq.sendMessageWithVIPChannel
              value: 'false'
          image: apacherocketmq/rocketmq-dashboard
          imagePullPolicy: Always
          name: rocketmq-dashboard
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    k8s.kuboard.cn/workload: rocketmq-dashboard
  labels:
    k8s.kuboard.cn/layer: web
    k8s.kuboard.cn/name: rocketmq-dashboard
  name: rocketmq-dashboard
  namespace: env
spec:
#  clusterIP: 10.233.80.189
#  clusterIPs:
#    - 10.233.80.189
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: xs4cyh
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    k8s.kuboard.cn/layer: web
    k8s.kuboard.cn/name: rocketmq-dashboard
  sessionAffinity: None
  type: NodePort


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dashboard-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  namespace: env
spec:
  ingressClassName: nginx
  rules:
    - host: rocketmq-dashboard.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: rocketmq-dashboard
                port:
                  number: 8080